-- 14.  List all Products that has been sold at least once in last 27 years.

SELECT DISTINCT
    p.ProductName
FROM [Order Details] AS od
JOIN Orders           AS o  ON od.OrderID   = o.OrderID
JOIN Products         AS p  ON od.ProductID = p.ProductID
WHERE o.OrderDate >= DATEADD(year, -27, GETDATE());

-- 15.  List top 5 locations (Zip Code) where the products sold most.

SELECT TOP 5
    o.ShipPostalCode      AS ZipCode,
    SUM(od.Quantity)      AS TotalSold
FROM [Order Details] AS od
JOIN Orders           AS o  ON od.OrderID = o.OrderID
GROUP BY o.ShipPostalCode
ORDER BY TotalSold DESC;

-- 16.  List top 5 locations (Zip Code) where the products sold most in last 27 years.

SELECT TOP 5
    o.ShipPostalCode      AS ZipCode,
    SUM(od.Quantity)      AS TotalSold
FROM [Order Details] AS od
JOIN Orders           AS o  ON od.OrderID = o.OrderID
WHERE o.OrderDate >= DATEADD(year, -27, GETDATE())
GROUP BY o.ShipPostalCode
ORDER BY TotalSold DESC;

-- 17.   List all city names and number of customers in that city.     

SELECT
    City,
    COUNT(*) AS CustomerCount
FROM Customers
GROUP BY City;

-- 18.  List city names which have more than 2 customers, and number of customers in that city

SELECT
    City,
    COUNT(*) AS CustomerCount
FROM Customers
GROUP BY City
HAVING COUNT(*) > 2;

-- 19.  List the names of customers who placed orders after 1/1/98 with order date.

SELECT
    DISTINCT c.CustomerID,
    c.CompanyName,
    o.OrderDate
FROM Customers AS c
JOIN Orders    AS o  ON c.CustomerID = o.CustomerID
WHERE o.OrderDate > '1998-01-01';

-- 20.  List the names of all customers with most recent order dates

SELECT
    c.CustomerID,
    c.CompanyName,
    MAX(o.OrderDate) AS MostRecentOrderDate
FROM Customers AS c
JOIN Orders    AS o  ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID, c.CompanyName;

-- 21.  Display the names of all customers  along with the  count of products they bought

SELECT
    c.CustomerID,
    c.CompanyName,
    SUM(od.Quantity) AS TotalProductsBought
FROM Customers      AS c
JOIN Orders         AS o  ON c.CustomerID = o.CustomerID
JOIN [Order Details] AS od ON o.OrderID    = od.OrderID
GROUP BY c.CustomerID, c.CompanyName;


-- 22.  Display the customer ids who bought more than 100 Products with count of products.

SELECT
    c.CustomerID,
    SUM(od.Quantity) AS TotalProductsBought
FROM Customers      AS c
JOIN Orders         AS o  ON c.CustomerID = o.CustomerID
JOIN [Order Details] AS od ON o.OrderID    = od.OrderID
GROUP BY c.CustomerID
HAVING SUM(od.Quantity) > 100;

-- 23.  List all of the possible ways that suppliers can ship their products. Display the results as below

--     Supplier Company Name                Shipping Company Name

--     ---------------------------------            ----------------------------------

SELECT
    sup.CompanyName     AS SupplierCompanyName,
    shp.CompanyName     AS ShippingCompanyName
FROM Suppliers AS sup
CROSS JOIN Shippers AS shp;

-- 24.  Display the products order each day. Show Order date and Product Name.

SELECT
    o.OrderDate,
    p.ProductName
FROM [Order Details] AS od
JOIN Orders           AS o  ON od.OrderID   = o.OrderID
JOIN Products         AS p  ON od.ProductID = p.ProductID
ORDER BY o.OrderDate;

-- 25.  Displays pairs of employees who have the same job title.

SELECT
    e1.FirstName + ' ' + e1.LastName AS Employee1,
    e2.FirstName + ' ' + e2.LastName AS Employee2,
    e1.Title                        AS JobTitle
FROM Employees AS e1
JOIN Employees AS e2
  ON e1.Title = e2.Title
 AND e1.EmployeeID < e2.EmployeeID;

-- 26.  Display all the Managers who have more than 2 employees reporting to them.

SELECT
    mgr.FirstName + ' ' + mgr.LastName AS ManagerName,
    COUNT(emp.EmployeeID)              AS ReportCount
FROM Employees AS emp
JOIN Employees AS mgr
  ON emp.ReportsTo = mgr.EmployeeID
GROUP BY mgr.FirstName, mgr.LastName
HAVING COUNT(emp.EmployeeID) > 2;

-- 27.  Display the customers and suppliers by city. The results should have the following columns

-- City

-- Name

-- Contact Name,

-- Type (Customer or Supplier)

SELECT
    City,
    CompanyName AS Name,
    ContactName,
    'Customer'  AS Type
FROM Customers

UNION ALL

SELECT
    City,
    CompanyName AS Name,
    ContactName,
    'Supplier'  AS Type
FROM Suppliers;